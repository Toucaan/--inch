/*  Test for the size of a pixel depends on the distribution of points (pixel count)
    along the physical size (i.e. spread area of points) of the glass.
    For the measure of area we are using precise `device-width` or `device-height`
    even though the CSS property has been deprecated by the w3c.

    100% vendors support `device-width` and `device-height` at the moment and the
    property will continue to be supported well into the future simply because it
    it is the only way to target/match device specifically using the natural resolve
    of the hardware.

    https://caniuse.com/#search=device-width

    There are probably other ways of achieving the above result using min()/max()
		properties but those would be empirical in nature.

		The mappings have been categorized into five zones: */

/****************/
/* DESKTOP ZONE */
/****************/

/* 13.3-inch MBP (2012) (1280 x 800). Do we need to specify device-height as well? */
@media (resolution: 96dpi) and (device-width: 1280px), (-webkit-device-pixel-ratio: 1) and (device-width: 1280px) {
  :root {
    --inch: 116px;
  }
}

/* 17" Retina MBP/Chrome values & MacBook Pro (16-inch, 2021) */
@media (resolution: 192dpi) and (device-width: 1680px), (-webkit-device-pixel-ratio: 2) and (device-width: 1680px), (resolution: 192dpi) and (device-width: 1728px) {
  :root {
    --inch: 130px;
  }
}

/* Windows 10 @100% (1366 x 768) landscape. */
@media (resolution: 96dpi) and (device-width: 1366px), (-webkit-device-pixel-ratio: 1) and (device-width: 1366px) {
  :root {
    --inch: 114px;
  }
}

/* Windows 10 Pro @100% (1920 x 1080px) landscape. */
@media (resolution: 96dpi) and (device-width: 1920px), (-webkit-device-pixel-ratio: 1) and (device-width: 1920px) {
  :root {
    --inch: 144px;
  }
}

/* Windows 10 Pro @125% (1920 x 1080px) landscape. */
@media (resolution: 120dpi) and (device-width: 1536px), (-webkit-device-pixel-ratio: 1) and (device-width: 1536px) {
  :root {
    --inch: 115px;
  }
}

/* 27" EIZO monitor (2560 x 1440)*/
@media (resolution: 115dpi) and (device-width: 2560px), (-webkit-device-pixel-ratio: 1) and (device-width: 2560px) {
  :root {
    --inch: 92px;
  }
}

/****************/
/* MOBILE ZONE */
/****************/

/* iPhone 11 Pro Max */
@media (device-width: 414px) and (-webkit-device-pixel-ratio: 3) and (orientation: portrait) {
  :root {
    --inch: 370px;
  }
}

@media (device-height: 896px) and (-webkit-device-pixel-ratio: 3) and (orientation: landscape) {
  :root {
    --inch: 189px;
  }
}

/* iPhone 6 */
@media (device-width: 375px) and (-webkit-device-pixel-ratio: 2) and (orientation: portrait) {
  :root {
    --inch: 430px;
  }
}

@media (device-height: 667px) and (-webkit-device-pixel-ratio: 2) and (orientation: landscape) {
  :root {
    --inch: 242px;
  }
}


/****************/
/* TABLET ZONE  */
/****************/

/* ----------- iPad Pro 10.5 ----------- */
@media  (device-width: 834px) and (-webkit-device-pixel-ratio: 2) and (orientation: portrait) {
  :root {
    --inch: 158px;
  }
}

@media (device-width: 834px) and (-webkit-device-pixel-ratio: 2) and (orientation: landscape) {
  :root {
    --inch: 118px;
  }
}

/*******************/
/* SMARTWATCH ZONE */
/*******************/

/* Apple Watch 5 (Women) 40mm. */
@media (device-width: 324px) and (min-device-height: 394px) and (-webkit-device-pixel-ratio: 3) {
  :root {
    --inch: 370px;
  }
}

/* Apple Watch 5 (Men) 44mm. */
@media  (device-width: 368px) and (min-device-height: 448px) and (-webkit-device-pixel-ratio: 3) {
  :root {
		--inch: 370px;
  }
}

/* Moto 360 Watch */
@media (device-width: 218px) and (device-height: 281px) and (-webkit-device-pixel-ratio: 2) {
  :root {
    --inch: 227px;
  }
}

/*********************/
/* PROJECTOR/TV ZONE */
/*********************/





/*********************************************************/
/**		Metric System & Imperial Units of Measurement 	 	**/
/*********************************************************/

:root {
  /* Do not --inch variable here. Doing so will break the cascade. */
  --centimeters: calc(2.54 * var(--inch));
  --millimeters: calc(25.4 * var(--inch));
  --meters: calc(2.54 * var(--inch) / 100);
  --feet: calc(12 * var(--inch));
  --thou: calc(var(--inch) / 1000);
}
